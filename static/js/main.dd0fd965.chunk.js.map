{"version":3,"sources":["services/service.js","components/popup/popup.js","actions/actions.js","components/header/header.js","components/pages/main-page.js","components/pages/news-list-page.js","components/pages/news-page.js","components/app/app.js","reducer.js","services/news.js","store.js","index.js"],"names":["accounts","name","login","password","isAdmin","Service","Promise","resolve","reject","user","find","item","setTimeout","Error","service","Popup","onClose","document","body","style","overflow","dispatch","useDispatch","useState","setLogin","setPassword","error","setError","disabled","setDisabled","useEffect","onError","className","onClick","e","stopPropagation","onSubmit","onLogin","then","result","type","catch","onChange","target","value","onLoginChange","placeholder","onPasswodChange","Header","useSelector","state","popup","setPopup","popupBox","to","MainPage","NewsListPage","news","search","setSearch","filter","title","toLowerCase","includes","text","map","id","NewsItem","date","NewsPage","useParams","navigate","useNavigate","App","path","element","initialState","onLogout","persistedState","localStorage","getItem","JSON","parse","undefined","store","createStore","action","subscribe","setItem","stringify","getState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dd0fd965.chunk.js","sourcesContent":["const accounts = [\n    {   \n        name: 'Mike',\n        login: 'admin',\n        password: 'adminpassword',\n        isAdmin: true,\n    },\n    {   \n        name: 'Daniel',\n        login: 'user',\n        password: 'password',\n        isAdmin: false,\n    }\n];\n\nexport default class Service {\n    \n    onLogin (login, password) {\n\n        return new Promise((resolve, reject) => {\n\n            const user = accounts.find((item) => {\n                return item.login === login && item.password === password;\n            });\n\n            setTimeout(() => {\n                if (user) {\n                    resolve(user);\n                } else {\n                    reject(new Error('No such User'));\n                }\n\n            }, 100);\n\n        });\n    };\n};","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { onLogin } from '../../actions/actions';\nimport Service from '../../services/service';\nimport './popup.scss';\n\nconst service = new Service();\n\nexport const Popup = ({ onClose }) => {\n\n    document.body.style.overflow = 'hidden';\n\n    const dispatch = useDispatch();\n\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(false);\n\n    const onSubmit = () => {\n        \n        service.onLogin(login, password)\n            .then((result) => {\n                dispatch(onLogin(result));\n                setError(false)\n                onClose();\n            })\n            .catch(() => setError(true));\n    };\n\n    const onLoginChange = (e) => {\n        setLogin(e.target.value);\n    };\n\n    const onPasswodChange = (e) => {\n        setPassword(e.target.value);\n    };\n\n    const [disabled, setDisabled] = useState(true);\n\n    useEffect(() => {\n        if (login !== '' && password !== '') {\n            setDisabled(false);\n        } else {\n            setError(false);\n            setDisabled(true);\n        }\n    }, [login, password])\n\n    const onError = error ? <p className='error'>Something went wrong, try one more time!</p> : null;\n\n    return (\n        <div\n            onClick={onClose}\n            className='popup'>\n            <div\n                className='popup__box'\n                onClick={(e) => e.stopPropagation()} >\n                <button\n                    className='btn popup__btn'\n                    onClick={onClose} >\n                    &times;\n                </button>\n                <form\n                    className='form'\n                    onSubmit={onSubmit} >\n                    <span className='form__label'>\n                        <label>Login:</label>\n                        <input\n                            onChange={(e) => onLoginChange(e)}\n                            placeholder='login' />\n                    </span>\n                    <span className='form__label'>\n                        <label>Password:</label>\n                        <input\n                            onChange={(e) => onPasswodChange(e)}\n                            type='password'\n                            placeholder='password' />\n                    </span>\n                    {onError}\n                    <button\n                        className='btn btn--submit'\n                        type='submit'\n                        disabled={disabled} >Submit</button>\n                </form>\n            </div>\n        </div>\n    );\n\n};","const onLogin = (user) => {\n    return {\n        type: 'ON_LOGIN',\n        user: user\n    };\n};\n\nconst onLogout = () => {\n    return {\n        type: 'ON_LOGOUT'\n    };\n};\n\n\nexport {\n    onLogout,\n    onLogin\n};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { onLogout } from '../../actions/actions';\nimport { Popup } from '../popup/popup';\nimport './header.scss';\n\nexport const Header = () => {\n\n    const user = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n\n    const logout = () => {\n        dispatch(onLogout());\n    };\n\n    const onLogin = () => {\n        setPopup(true);\n    };\n\n    const onClose = () => {\n        document.body.style.overflow = 'overlay';\n        setPopup(false);\n    }\n\n    const [popup, setPopup] = useState(false);\n\n    const popupBox = popup ? <Popup onClose={onClose} /> : null;\n\n    const login = user ?\n        <button\n            className='btn btn--undecorated'\n            onClick={logout} >\n            Выход\n        </button>\n        : <button\n            className='btn btn--undecorated'\n            onClick={onLogin}>\n            Вход\n        </button>;\n\n    return (\n        <div className='header container'>\n            {popupBox}\n            <Link to='/'>\n                <div className='logo btn' />\n            </Link>\n            <nav className='menu'>\n                <Link to='/'>\n                    Главная\n                </Link>\n                <Link to='/news'>\n                    Новости\n                </Link>\n                {login}\n            </nav>\n        </div>\n    );\n};","import { useSelector } from \"react-redux\";\nimport './pages.scss';\n\nexport const MainPage = () => {\n\n    const user = useSelector((state) => state.user);\n\n    const name = user ? user.name : 'Гость';\n\n    return (\n        <div className='page page--center'>\n            <p className='welcome'>\n                Привет, {name}!\n            </p>\n        </div>\n    );\n};","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './pages.scss';\n\nexport const NewsListPage = () => {\n\n    const news = useSelector((state) => state.news);\n\n    const [search, setSearch] = useState('');\n\n    const onChange = (e) => {\n        setSearch(e.target.value);\n    };\n\n    return (\n        <ul className='page'>\n            <input \n                className='search'\n                placeholder='Search'\n                onChange={onChange} />\n            {\n                news.filter((item) => {\n                    return (\n                        item.title.toLowerCase().includes(search.toLowerCase())\n                        || item.text.toLowerCase().includes(search.toLowerCase())\n                    );\n                })\n                .map((item) => {\n\n                    return (\n                        <li key={item.id}>\n                            <Link to={`/news/${item.id}`}>\n                                <NewsItem news={item} />\n                            </Link>\n                        </li>\n                    );\n                })\n            }\n        </ul>\n    );\n};\n\nconst NewsItem = ({ news }) => {\n\n    const { title, text, date } = news;\n\n    return (\n        <div className='news-item'>\n            <span className='news-item__title'>{title}</span>\n            <span className='news-item__text'>{text}</span>\n            <span className='news-item__date'>{date}</span>\n        </div>\n    );\n};","import { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router';\nimport './pages.scss';\n\nexport const NewsPage = () => {\n\n    const { id } = useParams();\n    const navigate = useNavigate();\n\n    const news = useSelector((state) => state.news.find((item) => {\n        return item.id === +id;\n    }))\n\n    const { title, date, text } = news;\n\n    return (\n        <div className='page'>\n            <button\n                className='btn--submit back'\n                onClick={() => navigate(-1)}>\n                Go back\n            </button>\n            <div className='container news'>\n                <h1 className='news__title'>{title}</h1>\n                <p className='news__date'>{date}</p>\n                <p className='news__text'>{text}</p>\n            </div>\n        </div>\n    );\n};","import { Route, Routes } from 'react-router';\nimport { Header } from '../header/header';\nimport { MainPage } from '../pages/main-page';\nimport { NewsListPage } from '../pages/news-list-page';\nimport { NewsPage } from '../pages/news-page';\nimport './app.scss';\n\nexport const App = () => {\n\n    return (\n        <div className='container'>\n            <Header />\n            <Routes>\n                <Route path='/' element={<MainPage />} />\n                <Route path='/news' element={<NewsListPage />} />\n                <Route path='/news/:id' element={<NewsPage />} />\n            </Routes>\n        </div>\n    );\n};","import { news } from \"./services/news\";\n\nconst initialState = {\n    user: null,\n    news: news\n};\n\nexport const reducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n        case 'ON_LOGIN':\n            return onLogin(action.user, state);\n        case 'ON_LOGOUT':\n            return onLogout(state);\n        default:\n            return state;\n    }\n};\n\nconst onLogin = (user, state) => {\n    return {\n        ...state,\n        user: user,\n    };\n};\n\nconst onLogout = (state) => {\n    return {\n        ...state,\n        user: null\n    };\n};\n\n// const onEdit = (editedItem, id, state) => {\n\n//     const { news } = state;\n\n//     const idx = news.findIndex((item) => {\n//         return item.id === id;\n//     });\n\n//     const editedNews = [\n//         news.splice(0, idx),\n//         editedItem,\n//         news.splice(idx + 1)\n//     ];\n\n//     return {\n//         ...state,\n//         news: editedNews\n//     };\n// };","export const news = [\n    {\n        id: 0,\n        title: 'Заголовок новости 1',\n        text: 'Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости.',\n        date: '01.01.2021'\n    },\n    {\n        id: 1,\n        title: 'Заголовок новости 2',\n        text: 'Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости.',\n        date: '02.01.2021'\n    },\n    {\n        id: 3,\n        title: 'Заголовок новости 3',\n        text: 'Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости. Здесь должен распологаться текст новости.',\n        date: '03.01.2021'\n    }\n];","import { createStore } from 'redux';\nimport { reducer } from './reducer';\n\nconst persistedState = localStorage.getItem('news')\n    ? JSON.parse(localStorage.getItem('news'))\n    : undefined;\n\nexport const store = createStore(reducer, persistedState);\n\nstore.subscribe(() => {\n    localStorage.setItem('news', JSON.stringify(store.getState()))\n});","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom'\nimport './index.scss';\nimport { App } from './components/app/app';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}